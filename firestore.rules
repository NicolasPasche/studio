rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Allow authenticated users to read roles during login check.
    // This collection should be managed via the Firebase console or a backend.
    match /user_roles/{email} {
      allow read: if request.auth.uid != null;
      allow write: if false; // Prevent client-side modification
    }

    // Users can read/update their own profile, and it's created for them.
    // They can't change their own role.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId && request.resource.data.role == resource.data.role;
      allow create: if request.auth.uid == userId;
    }
    
    // Example for a collection that sales and admin can access
    match /customers/{docId=**} {
        allow read, write: if getRole() in ['sales', 'admin'];
    }

    // Default-deny all other collections
    match /{path=**}/documents/{docId=**} {
      allow read, write: if false;
    }
  }
}
